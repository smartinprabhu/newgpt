{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/martinprabhu/Downloads/support-operations-centre/new_app/src/components/theme-context.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { createContext, useContext, useState, useEffect } from 'react';\n\n// Define and export the types for theme mode and color theme\nexport type ThemeMode = \"light\" | \"dark\" | \"system\";\nexport type ColorTheme = \"default\" | \"blue\" | \"teal\" | \"green\" | \"purple\" | \"orange\" | \"gray\" | \"red\";\nexport type FontFamily = \"system\" | \"gotham-book\";\n\n// Define the context type\ninterface ThemeContextType {\n  themeMode: ThemeMode;\n  colorTheme: ColorTheme;\n  fontFamily: FontFamily;\n  isDarkTheme: boolean;\n  setThemeMode: (mode: ThemeMode) => void;\n  setColorTheme: (color: ColorTheme) => void;\n  setFontFamily: (font: FontFamily) => void;\n}\n\n// Create the context with a default value\nconst ThemeContext = createContext<ThemeContextType>({\n  themeMode: \"system\",\n  colorTheme: \"default\",\n  fontFamily: \"gotham-book\",\n  isDarkTheme: false,\n  setThemeMode: () => {},\n  setColorTheme: () => {},\n  setFontFamily: () => {},\n});\n\n// Theme provider component\nexport const ThemeProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [mounted, setMounted] = useState(false);\n  const [themeMode, setThemeMode] = useState<ThemeMode>(\"system\");\n  const [colorTheme, setColorTheme] = useState<ColorTheme>(\"default\");\n  const [fontFamily, setFontFamily] = useState<FontFamily>(\"gotham-book\");\n  const [isDarkTheme, setIsDarkTheme] = useState<boolean>(false);\n\n  // Initialize state after mounting\n  useEffect(() => {\n    setMounted(true);\n    const savedThemeMode = (localStorage.getItem(\"themeMode\") as ThemeMode | null) || \"system\";\n    const savedColorTheme = (localStorage.getItem(\"colorTheme\") as ColorTheme | null) || \"default\";\n    const savedFontFamily = (localStorage.getItem(\"fontFamily\") as FontFamily | null) || \"gotham-book\";\n    \n    setThemeMode(savedThemeMode);\n    setColorTheme(savedColorTheme);\n    setFontFamily(savedFontFamily);\n    \n    // Determine if dark theme should be active\n    let isDark = false;\n    if (savedThemeMode === \"system\") {\n      isDark = window.matchMedia(\"(prefers-color-scheme: dark)\").matches;\n    } else {\n      isDark = savedThemeMode === \"dark\";\n    }\n    setIsDarkTheme(isDark);\n  }, []);\n\n  // Apply theme and listen for system changes\n  useEffect(() => {\n    if (!mounted) return;\n\n    // Encapsulated applyTheme logic\n    const currentMode = themeMode;\n    const currentColor = colorTheme;\n    const currentFont = fontFamily;\n\n    document.documentElement.classList.remove(\n      \"light-default\", \"light-blue\", \"light-teal\", \"light-green\", \"light-purple\", \"light-orange\", \"light-gray\", \"light-red\",\n      \"dark-default\", \"dark-blue\", \"dark-teal\", \"dark-green\", \"dark-purple\", \"dark-orange\", \"dark-gray\", \"dark-red\"\n    );\n\n    let isDark = false;\n    if (currentMode === \"system\") {\n      isDark = window.matchMedia(\"(prefers-color-scheme: dark)\").matches;\n    } else {\n      isDark = currentMode === \"dark\";\n    }\n\n    document.documentElement.classList.toggle(\"dark\", isDark);\n    document.documentElement.setAttribute(\"data-theme\", isDark ? \"dark\" : \"light\");\n\n    const themeClass = `${isDark ? \"dark\" : \"light\"}-${currentColor}`;\n    document.documentElement.classList.add(themeClass);\n    \n    // Apply font family\n    document.documentElement.style.setProperty('--font-family', \n      fontFamily === 'gotham-book' ? '\"Gotham Book\", sans-serif' :\n      'ui-sans-serif, system-ui, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"'\n    );\n\n    localStorage.setItem(\"themeMode\", currentMode);\n    localStorage.setItem(\"colorTheme\", currentColor);\n    localStorage.setItem(\"fontFamily\", fontFamily);\n    setIsDarkTheme(isDark);\n\n    // Listener for system theme changes\n    const mediaQuery = window.matchMedia(\"(prefers-color-scheme: dark)\");\n    const handleSystemThemeChange = (e: MediaQueryListEvent) => {\n      if (themeMode === \"system\") {\n        document.documentElement.classList.remove(\n          \"light-default\", \"light-blue\", \"light-teal\", \"light-green\", \"light-purple\", \"light-orange\", \"light-red\",\n          \"dark-default\", \"dark-blue\", \"dark-teal\", \"dark-green\", \"dark-purple\", \"dark-orange\", \"dark-red\"\n        );\n        document.documentElement.classList.toggle(\"dark\", e.matches);\n        document.documentElement.setAttribute(\"data-theme\", e.matches ? \"dark\" : \"light\");\n        const newSystemThemeClass = `${e.matches ? \"dark\" : \"light\"}-${colorTheme}`;\n        document.documentElement.classList.add(newSystemThemeClass);\n        setIsDarkTheme(e.matches);\n        localStorage.setItem(\"themeMode\", \"system\");\n      }\n    };\n\n    mediaQuery.addEventListener(\"change\", handleSystemThemeChange);\n    return () => mediaQuery.removeEventListener(\"change\", handleSystemThemeChange);\n  }, [mounted, themeMode, colorTheme, fontFamily]);\n\n  const handleModeChange = (mode: ThemeMode) => {\n    setThemeMode(mode);\n  };\n\n  const handleColorThemeChange = (color: ColorTheme) => {\n    setColorTheme(color);\n  };\n\n  const handleFontFamilyChange = (font: FontFamily) => {\n    setFontFamily(font);\n  };\n\n  return (\n    <ThemeContext.Provider value={{ \n      themeMode, \n      colorTheme, \n      fontFamily,\n      isDarkTheme, \n      setThemeMode: handleModeChange, \n      setColorTheme: handleColorThemeChange,\n      setFontFamily: handleFontFamilyChange\n    }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n\n// Custom hook to use the theme context\nexport const useTheme = () => {\n  const context = useContext(ThemeContext);\n  return context;\n};\n"],"names":[],"mappings":"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","debugId":null}}]
}