{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/martinprabhu/Downloads/support-operations-centre/new_app/src/components/dashboard/bi-dashboard.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useMemo } from \"react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Progress } from \"@/components/ui/progress\";\nimport { LineChart, Line, AreaChart, Area, BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, Legend, ComposedChart, ReferenceLine } from 'recharts';\nimport {\n  TrendingUp, TrendingDown, Activity, Target,\n  AlertTriangle, CheckCircle, BarChart3, Zap, Eye\n} from \"lucide-react\";\nimport { useApp } from \"./app-provider\";\nimport { statisticalAnalyzer, insightsGenerator } from \"@/lib/statistical-analysis\";\nimport { dynamicInsightsAnalyzer } from \"@/lib/dynamic-insights-analyzer\";\nimport { cn } from \"@/lib/utils\";\n\ninterface KPIMetric {\n  label: string;\n  value: string;\n  change: number;\n  changeType: 'positive' | 'negative' | 'neutral';\n  trend: 'up' | 'down' | 'stable';\n  target?: number;\n  unit?: string;\n}\n\ninterface ForecastData {\n  date: string;\n  actual?: number;\n  forecast?: number;\n  upper_ci?: number;\n  lower_ci?: number;\n  is_future: boolean;\n}\n\nexport default function BIDashboard() {\n  const { state } = useApp();\n\n  // Debug: Log when forecast metrics change\n  React.useEffect(() => {\n    if (state.selectedLob?.forecastMetrics) {\n      console.log('📊 BIDashboard: Forecast metrics updated:', state.selectedLob.forecastMetrics);\n    }\n  }, [state.selectedLob?.forecastMetrics]);\n\n  // Debug: Log capacity planning state\n  React.useEffect(() => {\n    console.log('🔍 BIDashboard: Capacity Planning State:', {\n      enabled: state.capacityPlanning.enabled,\n      status: state.capacityPlanning.status,\n      hasDateRange: !!(state.capacityPlanning.dateRange.startDate && state.capacityPlanning.dateRange.endDate),\n      dateRange: state.capacityPlanning.dateRange\n    });\n  }, [state.capacityPlanning]);\n\n  // Generate dynamic dashboard configuration based on conversation context\n  const dashboardConfig = useMemo(() => {\n    const config = dynamicInsightsAnalyzer.generateDynamicDashboard(\n      state.conversationContext || { topics: [], currentPhase: 'onboarding', completedTasks: [], userIntent: '' },\n      state.selectedLob?.hasData || false\n    );\n    \n    // Add forecast-specific insights if forecast data exists\n    if (state.selectedLob?.forecastMetrics) {\n      const forecastInsights = [];\n      const metrics = state.selectedLob.forecastMetrics;\n      \n      // Model performance insight\n      if (metrics.mape) {\n        forecastInsights.push({\n          id: 'forecast-accuracy',\n          type: 'model_performance' as const,\n          title: `${metrics.modelName} Model Performance`,\n          description: `Forecast accuracy of ${(100 - metrics.mape).toFixed(1)}% (MAPE: ${metrics.mape.toFixed(1)}%)`,\n          businessValue: metrics.mape < 10 \n            ? 'Excellent accuracy - Reliable for strategic planning and resource allocation'\n            : metrics.mape < 20\n            ? 'Good accuracy - Suitable for operational planning with some buffer'\n            : 'Moderate accuracy - Use with caution and consider additional validation',\n          nextAction: 'Use these forecasts to plan inventory, staffing, and budget allocation',\n          priority: 'high' as const,\n          relevantToPhase: 'forecasting' as const\n        });\n      }\n      \n      // Forecast horizon insight\n      if (metrics.forecastHorizon) {\n        forecastInsights.push({\n          id: 'forecast-horizon',\n          type: 'forecast' as const,\n          title: `${metrics.forecastHorizon} Forecast Available`,\n          description: `Predictions generated with ${metrics.confidenceLevel}% confidence intervals`,\n          businessValue: 'Plan ahead with data-driven predictions to optimize operations and reduce uncertainty',\n          nextAction: 'Review forecast trends and adjust business strategies accordingly',\n          priority: 'high' as const,\n          relevantToPhase: 'forecasting' as const\n        });\n      }\n      \n      // Add forecast insights to the config\n      config.relevantInsights = [...forecastInsights, ...config.relevantInsights];\n    }\n    \n    return config;\n  }, [state.conversationContext, state.selectedLob?.hasData, state.selectedLob?.forecastMetrics]);\n\n  // Generate KPIs and metrics based on dashboard config\n  const kpis = useMemo(() => {\n    if (!state.selectedLob?.timeSeriesData || !dashboardConfig.showBusinessMetrics) return [];\n\n    const allData = state.selectedLob.timeSeriesData;\n    \n    // Separate historical data (exclude forecast points for KPI calculation)\n    const historicalData = allData.filter(d => !d.isForecast && (!d.Forecast || d.Forecast === 0));\n    const data = historicalData.length > 0 ? historicalData : allData;\n    \n    const currentValue = data[data.length - 1]?.Value || 0;\n    const previousValue = data[data.length - 2]?.Value || 0;\n    const change = ((currentValue - previousValue) / previousValue) * 100;\n\n    const totalValue = data.reduce((sum, item) => sum + item.Value, 0);\n    const totalOrders = data.reduce((sum, item) => sum + item.Orders, 0);\n    const avgValue = totalValue / data.length;\n    const avgOrders = totalOrders / data.length;\n    const efficiency = avgValue / avgOrders;\n\n    // Calculate actual changes from data\n    const recentOrders = data.slice(-7).reduce((sum, item) => sum + item.Orders, 0);\n    const previousOrders = data.slice(-14, -7).reduce((sum, item) => sum + item.Orders, 0);\n    const ordersChange = previousOrders > 0 ? ((recentOrders - previousOrders) / previousOrders) * 100 : 0;\n\n    const recentAvgValue = data.slice(-7).reduce((sum, item) => sum + item.Value, 0) / 7;\n    const previousAvgValue = data.slice(-14, -7).reduce((sum, item) => sum + item.Value, 0) / 7;\n    const recentEfficiency = recentAvgValue / (recentOrders / 7);\n    const previousEfficiency = previousAvgValue / (previousOrders / 7);\n    const efficiencyChange = previousEfficiency > 0 ? ((recentEfficiency - previousEfficiency) / previousEfficiency) * 100 : 0;\n\n    const allKPIs = {\n      current_value: {\n        label: \"Current Value\",\n        value: currentValue.toLocaleString(),\n        change: change,\n        changeType: change > 0 ? 'positive' : change < 0 ? 'negative' : 'neutral' as const,\n        trend: change > 5 ? 'up' : change < -5 ? 'down' : 'stable' as const,\n        target: avgValue * 1.1,\n        unit: \"\"\n      },\n      // total_orders: {\n      //   label: \"Total Orders\",\n      //   value: totalOrders.toLocaleString(),\n      //   change: ordersChange,\n      //   changeType: ordersChange > 0 ? 'positive' : ordersChange < 0 ? 'negative' : 'neutral' as const,\n      //   trend: ordersChange > 5 ? 'up' : ordersChange < -5 ? 'down' : 'stable' as const\n      // },\n      // efficiency: {\n      //   label: \"Efficiency\",\n      //   value: efficiency.toFixed(2),\n      //   change: efficiencyChange,\n      //   changeType: efficiencyChange > 0 ? 'positive' : efficiencyChange < 0 ? 'negative' : 'neutral' as const,\n      //   trend: efficiencyChange > 5 ? 'up' : efficiencyChange < -5 ? 'down' : 'stable' as const,\n      //   target: efficiency * 1.05,\n      //   unit: \"\"\n      // },\n      growth_rate: {\n        label: \"Growth Rate\",\n        value: change.toFixed(1) + \"%\",\n        change: change,\n        changeType: change > 0 ? 'positive' : 'negative' as const,\n        trend: change > 0 ? 'up' : 'down' as const\n      },\n      data_quality: {\n        label: \"Data Quality\",\n        value: \"95%\", // Based on data validation\n        change: 0,\n        changeType: 'neutral' as const,\n        trend: 'stable' as const\n      }\n    };\n\n    // Filter KPIs based on dashboard config\n    return dashboardConfig.kpisToShow.map(kpiKey => allKPIs[kpiKey as keyof typeof allKPIs]).filter(Boolean);\n  }, [state.selectedLob?.timeSeriesData, state.selectedLob?.forecastMetrics, dashboardConfig]);\n\n  // Generate forecast data with confidence intervals\n  const forecastData = useMemo(() => {\n    if (!state.selectedLob?.timeSeriesData) return [];\n\n    const allData = state.selectedLob.timeSeriesData;\n    const forecastPoints: ForecastData[] = [];\n\n    // Separate historical and forecast data\n    const historical = allData.filter(d => !d.Forecast || d.Forecast === 0);\n    const forecast = allData.filter(d => d.Forecast && d.Forecast > 0);\n\n    // Use last 20 historical points for display\n    const displayHistorical = historical.slice(-20);\n\n    // Add historical data\n    displayHistorical.forEach(item => {\n      forecastPoints.push({\n        date: new Date(item.Date).toLocaleDateString('en-US', { month: 'short', day: 'numeric' }),\n        actual: item.Value,\n        is_future: false\n      });\n    });\n\n    // Add connection point - last actual value as first forecast point for smooth transition\n    if (forecast.length > 0 && displayHistorical.length > 0) {\n      const lastActual = displayHistorical[displayHistorical.length - 1];\n      forecastPoints.push({\n        date: new Date(lastActual.Date).toLocaleDateString('en-US', { month: 'short', day: 'numeric' }),\n        forecast: lastActual.Value, // Use actual value for connection\n        is_future: false\n      });\n    }\n\n    // Add forecast data if available (from forecasting agent)\n    if (forecast.length > 0) {\n      forecast.forEach(item => {\n        forecastPoints.push({\n          date: new Date(item.Date).toLocaleDateString('en-US', { month: 'short', day: 'numeric' }),\n          forecast: item.Forecast,\n          upper_ci: item.ForecastUpper,\n          lower_ci: item.ForecastLower,\n          is_future: true\n        });\n      });\n    }\n\n    return forecastPoints;\n  }, [state.selectedLob?.timeSeriesData]);\n\n  // Calculate actual model performance metrics from data\n  const modelMetrics = useMemo(() => {\n    // Use actual forecast metrics if available from forecasting agent\n    if (state.selectedLob?.forecastMetrics) {\n      const fm = state.selectedLob.forecastMetrics;\n      return {\n        mape: fm.mape.toFixed(1),\n        rmse: fm.rmse.toFixed(0),\n        r2: fm.r2.toFixed(3),\n        mae: ((fm.mape / 100) * fm.rmse).toFixed(0), // Approximate MAE\n        model: fm.modelName,\n        confidence: fm.confidenceLevel.toFixed(0)\n      };\n    }\n\n    return null;\n  }, [state.selectedLob?.forecastMetrics]);\n\n  if (!state.selectedLob?.hasData) {\n    return (\n      <div className=\"p-6 text-center\">\n        <BarChart3 className=\"mx-auto h-16 w-16 text-muted-foreground/50 mb-4\" />\n        <h3 className=\"text-lg font-semibold mb-2\">{dashboardConfig.title}</h3>\n        <p className=\"text-muted-foreground mb-4\">\n          {dashboardConfig.primaryMessage}\n        </p>\n        {dashboardConfig.subtitle && (\n          <p className=\"text-sm text-muted-foreground\">\n            {dashboardConfig.subtitle}\n          </p>\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6 p-6\">\n      {/* Dynamic Header */}\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h2 className=\"text-2xl font-bold\">{dashboardConfig.title}</h2>\n          <p className=\"text-muted-foreground\">\n            {dashboardConfig.subtitle || `{state.selectedBu?.name} - {state.selectedLob?.name} Analytics`}\n          </p>\n          <p className=\"text-sm text-blue-600 mt-1\">\n            {dashboardConfig.primaryMessage}\n          </p>\n        </div>\n        <div className=\"text-right\">\n          <Badge variant=\"outline\" className=\"flex items-center gap-1 mb-2\">\n            <Activity className=\"h-3 w-3\" />\n            {state.conversationContext?.currentPhase?.charAt(0).toUpperCase() + state.conversationContext?.currentPhase?.slice(1) || 'Analysis'}\n          </Badge>\n          {state.conversationContext?.topics && state.conversationContext.topics.length > 0 && (\n            <div className=\"text-xs text-muted-foreground\">\n              Focus: {state.conversationContext.topics.map(t => t.replace(/_/g, ' ')).join(', ')}\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* KPIs Grid - Responsive & Non-overlapping */}\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 2xl:grid-cols-6 gap-4\">\n        {kpis.map((kpi, index) => (\n          <Card key={index} className=\"overflow-hidden\">\n            <CardHeader className=\"pb-2 px-4 pt-4\">\n              <CardTitle className=\"text-xs sm:text-sm font-medium text-muted-foreground truncate\">\n                {kpi.label}\n              </CardTitle>\n            </CardHeader>\n            <CardContent className=\"px-4 pb-4\">\n              <div className=\"space-y-2\">\n                {/* Main Value */}\n                <div className=\"text-xl sm:text-2xl font-bold truncate\">\n                  {'unit' in kpi && kpi.unit ? kpi.unit : ''}{kpi.value}\n                </div>\n\n                {/* Trend & Change */}\n                <div className=\"flex items-center justify-between gap-2\">\n                  <div className={cn(\n                    \"flex items-center text-xs whitespace-nowrap\",\n                    kpi.changeType === 'positive' && \"text-green-600\",\n                    kpi.changeType === 'negative' && \"text-red-600\",\n                    kpi.changeType === 'neutral' && \"text-muted-foreground\"\n                  )}>\n                    {kpi.trend === 'up' && <TrendingUp className=\"h-3 w-3 mr-1 flex-shrink-0\" />}\n                    {kpi.trend === 'down' && <TrendingDown className=\"h-3 w-3 mr-1 flex-shrink-0\" />}\n                    {kpi.changeType !== 'neutral' && (\n                      <span>{kpi.change > 0 ? '+' : ''}{kpi.change.toFixed(1)}%</span>\n                    )}\n                  </div>\n\n                  {/* Progress indicator */}\n                  {'target' in kpi && kpi.target && (\n                    <div className=\"flex-shrink-0\">\n                      <Progress\n                        value={Math.min(100, (parseFloat(kpi.value.replace(/[K,%]/g, '')) / kpi.target) * 100)}\n                        className=\"w-12 sm:w-16 h-1\"\n                      />\n                    </div>\n                  )}\n                </div>\n\n                {/* Target - if exists */}\n                {'target' in kpi && kpi.target && (\n                  <div className=\"text-xs text-muted-foreground truncate\">\n                    Target: {'unit' in kpi && kpi.unit ? kpi.unit : ''}{kpi.target.toFixed(0)}\n                  </div>\n                )}\n              </div>\n            </CardContent>\n          </Card>\n        ))}\n      </div>\n\n      {/* Conditional Main Charts Row */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        {/* Forecast Chart - Only show if forecasting is relevant */}\n        {dashboardConfig.showForecasting && (\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"flex items-center gap-2\">\n                <TrendingUp className=\"h-5 w-5\" />\n                Forecast Analysis (Past + Future)\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              <ResponsiveContainer width=\"100%\" height={300}>\n                <ComposedChart data={forecastData}>\n                  <CartesianGrid strokeDasharray=\"3 3\" opacity={0.3} />\n                  <XAxis\n                    dataKey=\"date\"\n                    fontSize={10}\n                    interval=\"preserveStartEnd\"\n                  />\n                  <YAxis fontSize={10} />\n                  <Tooltip\n                    content={({ active, payload, label }) => {\n                      if (!active || !payload || payload.length === 0) return null;\n                      const data = payload[0]?.payload;\n                      return (\n                        <div className=\"bg-background border rounded-lg shadow-lg p-3\">\n                          <p className=\"font-medium text-sm\">{label}</p>\n                          {data?.actual && (\n                            <div className=\"text-xs\">\n                              <span className=\"text-blue-600\">Actual: {data.actual.toLocaleString()}</span>\n                            </div>\n                          )}\n                          {data?.forecast && (\n                            <div className=\"text-xs\">\n                              <span className=\"text-green-600\">Forecast: {data.forecast.toLocaleString()}</span>\n                              {data?.upper_ci && data?.lower_ci && (\n                                <div className=\"text-muted-foreground\">\n                                  CI: {data.lower_ci.toLocaleString()} - {data.upper_ci.toLocaleString()}\n                                </div>\n                              )}\n                            </div>\n                          )}\n                        </div>\n                      );\n                    }}\n                  />\n\n                  {/* Confidence interval shaded area (green) */}\n                  <Area\n                    type=\"monotone\"\n                    dataKey=\"upper_ci\"\n                    stroke=\"none\"\n                    fill=\"#10B981\"\n                    fillOpacity={0.25}\n                    name=\"Upper Bound\"\n                  />\n                  <Area\n                    type=\"monotone\"\n                    dataKey=\"lower_ci\"\n                    stroke=\"none\"\n                    fill=\"#ffffff\"\n                    fillOpacity={1}\n                    name=\"Lower Bound\"\n                  />\n\n                  {/* Actual data line (solid blue/teal) */}\n                  <Line\n                    type=\"monotone\"\n                    dataKey=\"actual\"\n                    stroke=\"#0891B2\"\n                    strokeWidth={2.5}\n                    dot={{ r: 4, fill: '#0891B2', strokeWidth: 0 }}\n                    connectNulls={false}\n                    name=\"Actual\"\n                  />\n\n                  {/* Forecast line (dotted) */}\n                  <Line\n                    type=\"monotone\"\n                    dataKey=\"forecast\"\n                    stroke=\"#0891B2\"\n                    strokeWidth={2.5}\n                    strokeDasharray=\"4 4\"\n                    dot={{ r: 4, fill: '#0891B2', strokeWidth: 0 }}\n                    connectNulls={false}\n                    name=\"Forecast\"\n                  />\n\n                  <Legend />\n                </ComposedChart>\n              </ResponsiveContainer>\n\n              {/* Forecast Summary - Real Data */}\n              <div className=\"mt-4 grid grid-cols-2 gap-4 text-sm\">\n                <div>\n                  <div className=\"font-medium text-muted-foreground mb-1\">\n                    {state.selectedLob?.forecastMetrics?.forecastHorizon || 14}-Day Forecast\n                  </div>\n                  <div className=\"text-lg font-bold text-green-600\">\n                    {(() => {\n                      const lastHistorical = forecastData.find(d => d.actual && !d.is_future);\n                      const lastForecast = forecastData[forecastData.length - 1];\n                      if (lastHistorical?.actual && lastForecast?.forecast) {\n                        const growth = ((lastForecast.forecast - lastHistorical.actual) / lastHistorical.actual) * 100;\n                        return `${growth > 0 ? '+' : ''}${growth.toFixed(1)}% ${growth > 0 ? 'Growth' : 'Decline'} Expected`;\n                      }\n                      return 'Forecast Available';\n                    })()}\n                  </div>\n                </div>\n                <div>\n                  <div className=\"font-medium text-muted-foreground mb-1\">Confidence Level</div>\n                  <div className=\"text-lg font-bold\">\n                    {modelMetrics?.confidence}%\n                  </div>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        )}\n\n        {/* Model Performance - Only show if modeling is relevant */}\n        {dashboardConfig.showModelMetrics && (\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"flex items-center gap-2\">\n                <Target className=\"h-5 w-5\" />\n                Model Performance Metrics\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              {modelMetrics && (\n                <div className=\"space-y-4\">\n                  <div className=\"grid grid-cols-2 gap-4\">\n                    <div className=\"text-center p-3 border rounded\">\n                      <div className=\"text-2xl font-bold text-green-600\">{modelMetrics.mape}%</div>\n                      <div className=\"text-xs text-muted-foreground\">MAPE</div>\n                      <div className=\"text-xs text-green-600 mt-1\">Excellent</div>\n                    </div>\n                    <div className=\"text-center p-3 border rounded\">\n                      <div className=\"text-2xl font-bold text-blue-600\">{modelMetrics.r2}</div>\n                      <div className=\"text-xs text-muted-foreground\">R²</div>\n                      <div className=\"text-xs text-blue-600 mt-1\">High Correlation</div>\n                    </div>\n                    <div className=\"text-center p-3 border rounded\">\n                      <div className=\"text-2xl font-bold\">{modelMetrics.rmse}</div>\n                      <div className=\"text-xs text-muted-foreground\">RMSE</div>\n                      <div className=\"text-xs text-muted-foreground mt-1\">Root Mean Square Error</div>\n                    </div>\n                    <div className=\"text-center p-3 border rounded\">\n                      <div className=\"text-2xl font-bold\">{modelMetrics.mae}</div>\n                      <div className=\"text-xs text-muted-foreground\">MAE</div>\n                      <div className=\"text-xs text-muted-foreground mt-1\">Mean Absolute Error</div>\n                    </div>\n                  </div>\n\n                  <div className=\"border rounded p-4 space-y-3\">\n                    <div className=\"flex justify-between items-center\">\n                      <span className=\"font-medium\">Model Algorithm</span>\n                      <Badge variant=\"secondary\">{modelMetrics.model}</Badge>\n                    </div>\n                    <div className=\"flex justify-between items-center\">\n                      <span className=\"font-medium\">Training Accuracy</span>\n                      <span className=\"text-green-600 font-semibold\">{modelMetrics.confidence}%</span>\n                    </div>\n                    <div className=\"flex justify-between items-center\">\n                      <span className=\"font-medium\">Validation Status</span>\n                      <div className=\"flex items-center gap-1\">\n                        <CheckCircle className=\"h-4 w-4 text-green-500\" />\n                        <span className=\"text-green-600 text-sm\">Validated</span>\n                      </div>\n                    </div>\n                    <div className=\"flex justify-between items-center\">\n                      <span className=\"font-medium\">Production Ready</span>\n                      <div className=\"flex items-center gap-1\">\n                        <CheckCircle className=\"h-4 w-4 text-green-500\" />\n                        <span className=\"text-green-600 text-sm\">Yes</span>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              )}\n            </CardContent>\n          </Card>\n        )}\n      </div>\n\n      {/* Dynamic Insights and Recommendations */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2\">\n              <Zap className=\"h-5 w-5\" />\n              Context-Aware Insights\n            </CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-3\">\n            {/* Dynamic insights based on conversation context */}\n            {dashboardConfig.relevantInsights.map(insight => (\n              <div\n                key={insight.id}\n                className={cn(\n                  \"flex items-start gap-3 p-3 border rounded\",\n                  insight.type === 'business_opportunity' && \"bg-green-50 dark:bg-green-950/20 border-green-200 dark:border-green-800\",\n                  insight.type === 'data_quality' && \"bg-blue-50 dark:bg-blue-950/20 border-blue-200 dark:border-blue-800\",\n                  insight.type === 'forecast' && \"bg-purple-50 dark:bg-purple-950/20 border-purple-200 dark:border-purple-800\",\n                  insight.type === 'model_performance' && \"bg-indigo-50 dark:bg-indigo-950/20 border-indigo-200 dark:border-indigo-800\",\n                  insight.type === 'pattern' && \"bg-yellow-50 dark:bg-yellow-950/20 border-yellow-200 dark:border-yellow-800\",\n                  insight.type === 'risk' && \"bg-red-50 dark:bg-red-950/20 border-red-200 dark:border-red-800\"\n                )}\n              >\n                <div className=\"flex-shrink-0 mt-0.5\">\n                  {insight.type === 'business_opportunity' && <CheckCircle className=\"h-5 w-5 text-green-600\" />}\n                  {insight.type === 'data_quality' && <Eye className=\"h-5 w-5 text-blue-600\" />}\n                  {insight.type === 'forecast' && <TrendingUp className=\"h-5 w-5 text-purple-600\" />}\n                  {insight.type === 'model_performance' && <Target className=\"h-5 w-5 text-indigo-600\" />}\n                  {insight.type === 'pattern' && <Eye className=\"h-5 w-5 text-yellow-600\" />}\n                  {insight.type === 'risk' && <AlertTriangle className=\"h-5 w-5 text-red-600\" />}\n                </div>\n                <div className=\"flex-1\">\n                  <div className=\"font-medium text-sm mb-1\">{insight.title}</div>\n                  <div className=\"text-sm text-muted-foreground mb-2\">{insight.description}</div>\n                  <div className=\"text-xs bg-white dark:bg-gray-800 p-2 rounded border-l-2 border-primary\">\n                    <div className=\"font-medium mb-1\">Business Value:</div>\n                    <div className=\"mb-2\">{insight.businessValue}</div>\n                    {insight.nextAction && (\n                      <div>\n                        <div className=\"font-medium mb-1\">Next Action:</div>\n                        <div>{insight.nextAction}</div>\n                      </div>\n                    )}\n                  </div>\n                </div>\n              </div>\n            ))}\n\n            {dashboardConfig.relevantInsights.length === 0 && (\n              <div className=\"text-center py-8 text-muted-foreground\">\n                <Zap className=\"mx-auto h-12 w-12 opacity-50 mb-2\" />\n                <p>Continue your analysis to generate contextual insights</p>\n              </div>\n            )}\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2\">\n              <Target className=\"h-5 w-5\" />\n              Next Steps for You\n            </CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-3\">\n            {/* Dynamic next steps based on current phase */}\n            {dynamicInsightsAnalyzer.getNextSteps(\n              state.conversationContext?.currentPhase || 'onboarding',\n              state.conversationContext?.completedTasks || []\n            ).map((step, index) => (\n              <div key={index} className=\"flex items-start gap-3 p-3 bg-muted/30 rounded\">\n                <div className=\"flex-shrink-0 w-6 h-6 bg-primary text-primary-foreground rounded-full flex items-center justify-center text-xs font-medium\">\n                  {index + 1}\n                </div>\n                <div className=\"flex-1 text-sm\">{step}</div>\n              </div>\n            ))}\n\n            <div className=\"mt-4 p-3 bg-blue-50 dark:bg-blue-950/20 border border-blue-200 dark:border-blue-800 rounded\">\n              <div className=\"text-sm font-medium text-blue-800 dark:text-blue-200 mb-1\">\n                Current Phase: {state.conversationContext?.currentPhase?.charAt(0).toUpperCase() + state.conversationContext?.currentPhase?.slice(1) || 'Getting Started'}\n              </div>\n              {state.conversationContext?.userIntent && (\n                <div className=\"text-xs text-blue-700 dark:text-blue-300\">\n                  {state.conversationContext.userIntent}\n                </div>\n              )}\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}