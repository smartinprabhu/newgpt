{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/martinprabhu/Downloads/support-operations-centre/new_app/src/components/dashboard/enhanced-workflow-tree.tsx"],"sourcesContent":["'use client';\nimport React, { useEffect, useState } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { ScrollArea } from '@/components/ui/scroll-area';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { Progress } from '@/components/ui/progress';\nimport { Accordion, AccordionContent, AccordionItem, AccordionTrigger } from '@/components/ui/accordion';\nimport { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from '@/components/ui/tooltip';\nimport {\n  GitMerge, CheckCircle2, AlertCircle, Clock, GitBranch,\n  Play, Bot, Brain, Zap, TrendingUp, Target, Eye,\n  MoreVertical, Pause, RotateCcw, FastForward, Settings, X\n} from 'lucide-react';\nimport type { WorkflowStep, WorkflowStatus } from '@/lib/types';\nimport { useApp } from './app-provider';\nimport { cn } from '@/lib/utils';\n\ninterface EnhancedWorkflowStep extends WorkflowStep {\n  progress?: number;\n  insights?: string[];\n  performance?: {\n    actualTime?: number;\n    efficiency?: number;\n    quality?: number;\n  };\n  subSteps?: Array<{\n    name: string;\n    status: 'completed' | 'active' | 'pending';\n    duration?: number;\n  }>;\n}\n\ninterface WorkflowMetrics {\n  totalSteps: number;\n  completedSteps: number;\n  activeSteps: number;\n  failedSteps: number;\n  avgStepTime: number;\n  estimatedTimeRemaining: number;\n  overallEfficiency: number;\n}\n\nconst statusConfig: Record<WorkflowStatus, {\n  icon: React.ReactNode;\n  color: string;\n  bgColor: string;\n  animation?: string;\n}> = {\n  completed: {\n    icon: <CheckCircle2 />,\n    color: 'text-green-600',\n    bgColor: 'bg-green-100 border-green-500',\n    animation: ''\n  },\n  active: {\n    icon: <Play className=\"animate-pulse\" />,\n    color: 'text-blue-600',\n    bgColor: 'bg-blue-100 border-blue-500',\n    animation: 'animate-pulse'\n  },\n  pending: {\n    icon: <Clock />,\n    color: 'text-gray-500',\n    bgColor: 'bg-gray-100 border-gray-300',\n    animation: ''\n  },\n  error: {\n    icon: <AlertCircle />,\n    color: 'text-red-600',\n    bgColor: 'bg-red-100 border-red-500',\n    animation: 'animate-bounce'\n  },\n};\n\nfunction EnhancedWorkflowNode({\n  step,\n  isLast,\n  onStepAction\n}: {\n  step: EnhancedWorkflowStep;\n  isLast: boolean;\n  onStepAction: (stepId: string, action: string) => void;\n}) {\n  const config = statusConfig[step.status];\n  const [showDetails, setShowDetails] = useState(false);\n\n  return (\n    <li className=\"flex items-start gap-4 pl-2 relative\">\n      {/* Connection Line */}\n      {!isLast && (\n        <div className=\"absolute left-6 top-12 w-px h-full bg-border opacity-50 overflow-auto\" />\n      )}\n\n      {/* Status Icon */}\n      <div className=\"flex flex-col items-center min-w-0 overflow-auto\">\n        <TooltipProvider>\n          <Tooltip>\n            <TooltipTrigger asChild>\n              <div className={cn(\n                \"rounded-full h-10 w-10 flex items-center justify-center border-2 transition-all duration-200 cursor-pointer overflow-auto\",\n                config.bgColor,\n                config.color,\n                config.animation,\n                step.status === 'active' && 'ring-4 ring-blue-500/30 shadow-lg scale-110'\n              )}>\n                {React.cloneElement(config.icon as React.ReactElement, {\n                  className: \"h-5 w-5\"\n                })}\n              </div>\n            </TooltipTrigger>\n            <TooltipContent side=\"right\" className=\"max-w-xs\">\n              <div className=\"space-y-1\">\n                <p className=\"font-medium capitalize\">{step.status}</p>\n                {step.performance && (\n                  <div className=\"text-xs space-y-1\">\n                    {step.performance.efficiency && (\n                      <div>Efficiency: {Math.round(step.performance.efficiency * 100)}%</div>\n                    )}\n                    {step.performance.quality && (\n                      <div>Quality: {Math.round(step.performance.quality * 100)}%</div>\n                    )}\n                  </div>\n                )}\n              </div>\n            </TooltipContent>\n          </Tooltip>\n        </TooltipProvider>\n      </div>\n\n      {/* Step Content */}\n      <div className=\"flex-1 pb-8 min-w-0\">\n        <Card className={cn(\n          \"transition-all duration-200 hover:shadow-md overflow-auto\",\n          step.status === 'active' && 'ring-2 ring-blue-500/20 shadow-md',\n          step.status === 'completed' && 'bg-green-50/50',\n          step.status === 'error' && 'bg-red-50/50'\n        )}>\n          <CardContent className=\"p-4\">\n            {/* Header */}\n            <div className=\"flex items-start justify-between gap-2 mb-2\">\n              <div className=\"flex-1 min-w-0\">\n                <h4 className={cn(\n                  \"font-medium text-sm truncate\",\n                  step.status === 'active' && 'text-primary'\n                )}>\n                  {step.name}\n                </h4>\n                <div className=\"flex items-center gap-2 mt-1\">\n                  <Badge variant=\"outline\" className=\"text-xs\">\n                    {step.estimatedTime}\n                  </Badge>\n                  {step.progress !== undefined && step.status === 'active' && (\n                    <Badge variant=\"secondary\" className=\"text-xs\">\n                      {Math.round(step.progress)}% complete\n                    </Badge>\n                  )}\n                </div>\n              </div>\n\n              <div className=\"flex items-center gap-1\">\n                {step.agent && (\n                  <TooltipProvider>\n                    <Tooltip>\n                      <TooltipTrigger asChild>\n                        <Badge variant=\"outline\" className=\"text-xs flex items-center gap-1\">\n                          <Bot className=\"h-3 w-3\" />\n                          {step.agent.split(' ')[0]}\n                        </Badge>\n                      </TooltipTrigger>\n                      <TooltipContent>\n                        <p>{step.agent}</p>\n                      </TooltipContent>\n                    </Tooltip>\n                  </TooltipProvider>\n                )}\n\n                <TooltipProvider>\n                  <Tooltip>\n                    <TooltipTrigger asChild>\n                      <Button\n                        variant=\"ghost\"\n                        size=\"icon\"\n                        className=\"h-6 w-6 opacity-0 group-hover:opacity-100 transition-opacity\"\n                        onClick={() => setShowDetails(!showDetails)}\n                      >\n                        <MoreVertical className=\"h-3 w-3\" />\n                      </Button>\n                    </TooltipTrigger>\n                    <TooltipContent>\n                      <p>Step options</p>\n                    </TooltipContent>\n                  </Tooltip>\n                </TooltipProvider>\n              </div>\n            </div>\n\n            {/* Progress Bar for Active Steps */}\n            {step.status === 'active' && step.progress !== undefined && (\n              <Progress value={step.progress} className=\"mb-3 h-2\" />\n            )}\n\n            {/* Step Details */}\n            <p className=\"text-xs text-muted-foreground mb-2\">{step.details}</p>\n\n            {/* Sub-steps */}\n            {step.subSteps && step.subSteps.length > 0 && (\n              <div className=\"space-y-1\">\n                <p className=\"text-xs font-medium text-muted-foreground\">Sub-tasks:</p>\n                {step.subSteps.map((subStep, i) => (\n                  <div key={i} className=\"flex items-center gap-2 text-xs\">\n                    {subStep.status === 'completed' && <CheckCircle2 className=\"h-3 w-3 text-green-500\" />}\n                    {subStep.status === 'active' && <Clock className=\"h-3 w-3 text-blue-500 animate-spin\" />}\n                    {subStep.status === 'pending' && <Clock className=\"h-3 w-3 text-gray-400\" />}\n                    <span className={cn(\n                      subStep.status === 'completed' && 'line-through text-muted-foreground',\n                      subStep.status === 'active' && 'text-primary font-medium'\n                    )}>\n                      {subStep.name}\n                    </span>\n                    {subStep.duration && (\n                      <span className=\"text-muted-foreground\">({subStep.duration}ms)</span>\n                    )}\n                  </div>\n                ))}\n              </div>\n            )}\n\n            {/* Performance Metrics */}\n            {step.performance && (step.status === 'completed' || step.status === 'active') && (\n              <div className=\"mt-3 pt-2 border-t border-border/50\">\n                <div className=\"grid grid-cols-3 gap-2 text-xs\">\n                  {step.performance.actualTime && (\n                    <div className=\"text-center\">\n                      <div className=\"font-medium\">Time</div>\n                      <div className=\"text-muted-foreground\">\n                        {Math.round(step.performance.actualTime / 1000)}s\n                      </div>\n                    </div>\n                  )}\n                  {step.performance.efficiency && (\n                    <div className=\"text-center\">\n                      <div className=\"font-medium\">Efficiency</div>\n                      <div className=\"text-muted-foreground\">\n                        {Math.round(step.performance.efficiency * 100)}%\n                      </div>\n                    </div>\n                  )}\n                  {step.performance.quality && (\n                    <div className=\"text-center\">\n                      <div className=\"font-medium\">Quality</div>\n                      <div className=\"text-muted-foreground\">\n                        {Math.round(step.performance.quality * 100)}%\n                      </div>\n                    </div>\n                  )}\n                </div>\n              </div>\n            )}\n\n            {/* Insights */}\n            {step.insights && step.insights.length > 0 && (\n              <div className=\"mt-3 pt-2 border-t border-border/50\">\n                <p className=\"text-xs font-medium mb-1 flex items-center gap-1\">\n                  <Brain className=\"h-3 w-3\" />\n                  Key Insights:\n                </p>\n                <ul className=\"space-y-1\">\n                  {step.insights.map((insight, i) => (\n                    <li key={i} className=\"text-xs text-muted-foreground flex items-start gap-1\">\n                      <Zap className=\"h-3 w-3 mt-0.5 flex-shrink-0 text-yellow-500\" />\n                      {insight}\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            )}\n\n            {/* Action Buttons for Active Steps */}\n            {step.status === 'active' && (\n              <div className=\"mt-3 flex gap-2\">\n                <Button\n                  size=\"sm\"\n                  variant=\"outline\"\n                  className=\"h-6 text-xs\"\n                  onClick={() => onStepAction(step.id, 'pause')}\n                >\n                  <Pause className=\"h-3 w-3 mr-1\" />\n                  Pause\n                </Button>\n                <Button\n                  size=\"sm\"\n                  variant=\"outline\"\n                  className=\"h-6 text-xs\"\n                  onClick={() => onStepAction(step.id, 'skip')}\n                >\n                  <FastForward className=\"h-3 w-3 mr-1\" />\n                  Skip\n                </Button>\n              </div>\n            )}\n          </CardContent>\n        </Card>\n      </div>\n    </li>\n  );\n}\n\nexport default function EnhancedWorkflowTree({ className }: { className?: string }) {\n  const { state, dispatch } = useApp();\n  const { workflow } = state;\n  const [isMobile, setIsMobile] = useState(false);\n  const [isOpen, setIsOpen] = useState(false);\n  const [metrics, setMetrics] = useState<WorkflowMetrics | null>(null);\n  const [drawerWidth, setDrawerWidth] = useState(400);\n\n  const [enhancedWorkflow, setEnhancedWorkflow] = useState<EnhancedWorkflowStep[]>([]);\n\n  useEffect(() => {\n    const checkMobile = () => setIsMobile(window.innerWidth < 768);\n    checkMobile();\n    window.addEventListener('resize', checkMobile);\n    return () => window.removeEventListener('resize', checkMobile);\n  }, []);\n\n  useEffect(() => {\n    if (workflow.length === 0) {\n      setEnhancedWorkflow([]);\n      setMetrics(null);\n      return;\n    }\n\n    const enhanced = workflow.map(step => {\n      const enhanced: EnhancedWorkflowStep = {\n        ...step,\n        progress: step.status === 'active' ? Math.floor(Math.random() * 80) + 10 : undefined,\n        insights: generateStepInsights(step),\n        performance: step.status === 'completed' ? {\n          actualTime: Math.floor(Math.random() * 30000) + 10000,\n          efficiency: 0.8 + Math.random() * 0.2,\n          quality: 0.85 + Math.random() * 0.15\n        } : undefined,\n        subSteps: generateSubSteps(step)\n      };\n      return enhanced;\n    });\n\n    setEnhancedWorkflow(enhanced);\n\n    const completedSteps = enhanced.filter(s => s.status === 'completed').length;\n    const activeSteps = enhanced.filter(s => s.status === 'active').length;\n    const failedSteps = enhanced.filter(s => s.status === 'error').length;\n\n    const completedPerformance = enhanced\n      .filter(s => s.performance)\n      .map(s => s.performance!.actualTime || 0);\n\n    const avgStepTime = completedPerformance.length > 0\n      ? completedPerformance.reduce((a, b) => a + b, 0) / completedPerformance.length\n      : 0;\n\n    const remainingSteps = enhanced.length - completedSteps - failedSteps;\n    const estimatedTimeRemaining = remainingSteps * avgStepTime;\n\n    setMetrics({\n      totalSteps: enhanced.length,\n      completedSteps,\n      activeSteps,\n      failedSteps,\n      avgStepTime,\n      estimatedTimeRemaining,\n      overallEfficiency: completedPerformance.length > 0\n        ? enhanced.filter(s => s.performance).reduce((sum, s) => sum + (s.performance?.efficiency || 0), 0) / completedPerformance.length\n        : 0\n    });\n  }, [workflow]);\n\n  const generateStepInsights = (step: WorkflowStep): string[] => {\n    const insights = [];\n\n    if (step.agent?.includes('EDA')) {\n      insights.push('Data quality score: 94/100');\n      insights.push('Strong seasonal patterns detected');\n      insights.push('3 outliers identified for review');\n    } else if (step.agent?.includes('ML')) {\n      insights.push('XGBoost showing best performance');\n      insights.push('Cross-validation MAPE: 8.2%');\n      insights.push('Feature importance: Date, lag-7, seasonal');\n    } else if (step.agent?.includes('Forecast')) {\n      insights.push('95% confidence intervals calculated');\n      insights.push('Next 30 days show 12% growth');\n      insights.push('Seasonal uplift expected in Q4');\n    }\n\n    return insights.slice(0, 2);\n  };\n\n  const generateSubSteps = (step: WorkflowStep) => {\n    const subStepOptions = {\n      'Data Analysis': [\n        { name: 'Load and validate data', status: 'completed' as const, duration: 1200 },\n        { name: 'Statistical summary', status: 'completed' as const, duration: 800 },\n        { name: 'Pattern detection', status: 'active' as const },\n        { name: 'Quality assessment', status: 'pending' as const }\n      ],\n      'Model Training': [\n        { name: 'Feature engineering', status: 'completed' as const, duration: 2100 },\n        { name: 'Algorithm selection', status: 'completed' as const, duration: 1500 },\n        { name: 'Hyperparameter tuning', status: 'active' as const },\n        { name: 'Cross-validation', status: 'pending' as const }\n      ],\n      'Generate Forecast': [\n        { name: 'Model preparation', status: 'completed' as const, duration: 800 },\n        { name: 'Forecast calculation', status: 'active' as const },\n        { name: 'Confidence intervals', status: 'pending' as const }\n      ]\n    };\n\n    const stepName = step.name.includes('Analysis') ? 'Data Analysis' :\n      step.name.includes('Training') ? 'Model Training' :\n        step.name.includes('Forecast') ? 'Generate Forecast' : null;\n\n    return stepName ? subStepOptions[stepName] || [] : [];\n  };\n\n  useEffect(() => {\n    if (state.isProcessing && workflow.length > 0 && workflow.every(s => s.status === 'completed')) {\n      dispatch({ type: 'SET_PROCESSING', payload: false });\n    }\n  }, [workflow, dispatch, state.isProcessing]);\n\n  const handleStepAction = (stepId: string, action: string) => {\n    switch (action) {\n      case 'pause':\n        break;\n      case 'skip':\n        dispatch({\n          type: 'UPDATE_WORKFLOW_STEP',\n          payload: { id: stepId, status: 'completed' }\n        });\n        break;\n      case 'retry':\n        dispatch({\n          type: 'UPDATE_WORKFLOW_STEP',\n          payload: { id: stepId, status: 'pending' }\n        });\n        break;\n    }\n  };\n\n  const showAgentMonitor = () => {\n    dispatch({ type: 'SET_AGENT_MONITOR_OPEN', payload: true });\n  };\n\n  const WorkflowMetricsDisplay = () => (\n    metrics && (\n      <Card className=\"mb-4\">\n        <CardHeader className=\"pb-2\">\n          <CardTitle className=\"text-sm flex items-center gap-2\">\n            <TrendingUp className=\"h-4 w-4\" />\n            Workflow Analytics\n          </CardTitle>\n        </CardHeader>\n        <CardContent className=\"pt-2\">\n          <div className=\"grid grid-cols-2 gap-3 text-xs\">\n            <div>\n              <div className=\"font-medium mb-1\">Progress</div>\n              <div className=\"text-muted-foreground\">\n                {metrics.completedSteps}/{metrics.totalSteps} steps\n              </div>\n              <Progress\n                value={(metrics.completedSteps / metrics.totalSteps) * 100}\n                className=\"mt-1 h-1\"\n              />\n            </div>\n            <div>\n              <div className=\"font-medium mb-1\">Efficiency</div>\n              <div className=\"text-muted-foreground\">\n                {Math.round(metrics.overallEfficiency * 100)}%\n              </div>\n              <Progress\n                value={metrics.overallEfficiency * 100}\n                className=\"mt-1 h-1\"\n              />\n            </div>\n            <div>\n              <div className=\"font-medium mb-1\">Avg Step Time</div>\n              <div className=\"text-muted-foreground\">\n                {Math.round(metrics.avgStepTime / 1000)}s\n              </div>\n            </div>\n            <div>\n              <div className=\"font-medium mb-1\">ETA</div>\n              <div className=\"text-muted-foreground\">\n                {Math.round(metrics.estimatedTimeRemaining / 1000)}s\n              </div>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n    )\n  );\n\n  const handleResizeStart = (e: React.MouseEvent) => {\n    e.preventDefault();\n    const startX = e.clientX;\n    const startWidth = drawerWidth;\n\n    const handleMouseMove = (e: MouseEvent) => {\n      const deltaX = e.clientX - startX;\n      const newWidth = Math.max(300, Math.min(800, startWidth + deltaX));\n      setDrawerWidth(newWidth);\n    };\n\n    const handleMouseUp = () => {\n      document.removeEventListener('mousemove', handleMouseMove);\n      document.removeEventListener('mouseup', handleMouseUp);\n    };\n\n    document.addEventListener('mousemove', handleMouseMove);\n    document.addEventListener('mouseup', handleMouseUp);\n  };\n\n  const renderContent = () => (\n    <div style={{ height: '100%', overflow: 'auto' }}>\n      {/* Fixed Metrics Header */}\n      {metrics && (\n        <div className=\"flex-shrink-0 p-3 border-b bg-muted/30\">\n          <div className=\"grid grid-cols-2 gap-3 text-xs\">\n            <div>\n              <div className=\"font-medium mb-1\">Progress</div>\n              <div className=\"text-muted-foreground\">\n                {metrics.completedSteps}/{metrics.totalSteps} steps\n              </div>\n              <Progress\n                value={(metrics.completedSteps / metrics.totalSteps) * 100}\n                className=\"mt-1 h-1\"\n              />\n            </div>\n            <div>\n              <div className=\"font-medium mb-1\">Efficiency</div>\n              <div className=\"text-muted-foreground\">\n                {Math.round(metrics.overallEfficiency * 100)}%\n              </div>\n              <Progress\n                value={metrics.overallEfficiency * 100}\n                className=\"mt-1 h-1\"\n              />\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Scrollable Content */}\n      <div className=\"flex-1 min-h-0 p-4 space-y-3\">\n        {enhancedWorkflow.length > 0 ? (\n          enhancedWorkflow.map((step, index) => (\n            <div key={step.id} className=\"relative\">\n              <EnhancedWorkflowNode\n                step={step}\n                isLast={index === enhancedWorkflow.length - 1}\n                onStepAction={handleStepAction}\n              />\n            </div>\n          ))\n        ) : (\n          <div className=\"text-center text-sm text-muted-foreground py-10\">\n            <GitMerge className=\"mx-auto h-12 w-12 text-muted-foreground/50 mb-4\" />\n            <p className=\"font-medium\">No Active Workflow</p>\n            <p>Start asking questions to see agents working in real-time.</p>\n            <div className=\"mt-4 text-xs space-y-1\">\n              <p><strong>Try asking:</strong></p>\n              <p>• \"Explore my data patterns\"</p>\n              <p>• \"Generate a forecast\"</p>\n              <p>• \"Clean and prepare my data\"</p>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n\n  return (\n    <div style={{ height: '100vh', overflow: 'auto' }}>\n      {isMobile ? (\n        <div style={{ height: '100%', overflow: 'auto' }} className={cn(\"md:hidden\", className)}>\n          <Accordion type=\"single\" collapsible className=\"w-full\" defaultValue={isOpen ? \"workflow\" : \"\"}>\n            <AccordionItem value=\"workflow\">\n              <AccordionTrigger onClick={() => setIsOpen(!isOpen)} className=\"bg-card p-4 border-b\">\n                <div className=\"flex items-center gap-2\">\n                  <GitBranch className=\"h-6 w-6\" />\n                  <span className=\"text-lg font-semibold\">Enhanced Workflow</span>\n                  {metrics && (\n                    <Badge variant=\"outline\">\n                      {metrics.completedSteps}/{metrics.totalSteps}\n                    </Badge>\n                  )}\n                </div>\n              </AccordionTrigger>\n              <AccordionContent>\n                <div style={{ height: '50vh', overflow: 'auto' }}>\n                  {enhancedWorkflow.length > 0 ? (\n                    <ol className=\"relative flex flex-col space-y-2\">\n                      {enhancedWorkflow.map((step, index) => (\n                        <EnhancedWorkflowNode\n                          key={step.id}\n                          step={step}\n                          isLast={index === enhancedWorkflow.length - 1}\n                          onStepAction={handleStepAction}\n                        />\n                      ))}\n                    </ol>\n                  ) : (\n                    <div className=\"text-center text-sm text-muted-foreground py-10 px-4\">\n                      <GitMerge className=\"mx-auto h-12 w-12 text-muted-foreground/50 mb-4\" />\n                      <p className=\"font-medium\">No Active Workflow</p>\n                      <p>Start asking questions to see which business analysts are working on your request in real-time.</p>\n                      <div className=\"mt-4 text-xs space-y-1\">\n                        <p><strong>Try asking:</strong></p>\n                        <p>• \"Explore my data patterns\"</p>\n                        <p>• \"Generate a forecast\"</p>\n                        <p>• \"Clean and prepare my data\"</p>\n                      </div>\n                    </div>\n                  )}\n                </div>\n              </AccordionContent>\n            </AccordionItem>\n          </Accordion>\n        </div>\n      ) : (\n        <>\n          {/* Workflow Sidebar Toggle */}\n          <Button\n            variant=\"ghost\"\n            size=\"sm\"\n            onClick={() => setIsOpen(!isOpen)}\n            className={cn(\n              \"fixed top-1/2 left-0 -translate-y-1/2 z-30 rounded-l-none rounded-r-md border-l-0 transition-all duration-200\",\n              \"bg-background/80 backdrop-blur-sm border shadow-md hover:shadow-lg\",\n              \"opacity-60 hover:opacity-100\",\n              isOpen && \"opacity-0 pointer-events-none\"\n            )}\n          >\n            <GitBranch className=\"h-4 w-4\" />\n            {metrics && (\n              <Badge variant=\"secondary\" className=\"ml-1 text-xs\">\n                {metrics.completedSteps}/{metrics.totalSteps}\n              </Badge>\n            )}\n          </Button>\n\n          {/* Workflow Drawer */}\n          <div\n            style={{\n              height: '100vh',\n              width: `${drawerWidth}px`,\n              overflow: 'auto',\n            }}\n            className={cn(\n              \"fixed inset-y-0 left-0 z-40 bg-background border-r shadow-xl transform transition-transform duration-300 ease-in-out flex\",\n              isOpen ? \"translate-x-0\" : \"-translate-x-full\"\n            )}\n          >\n            {/* Main Drawer Content */}\n            <Card style={{ height: '100%', overflow: 'auto' }} className=\"flex-col rounded-none h-full flex-1\">\n              <CardHeader className=\"flex flex-row items-center justify-between gap-2 p-3 border-b flex-shrink-0 bg-muted/30\">\n                <div className=\"flex items-center gap-2 min-w-0\">\n                  <GitBranch className=\"h-5 w-5 text-primary\" />\n                  <div className=\"min-w-0\">\n                    {metrics && (\n                      <p className=\"text-sm font-medium\">\n                        {metrics.completedSteps}/{metrics.totalSteps} • {Math.round(metrics.overallEfficiency * 100)}%\n                      </p>\n                    )}\n                  </div>\n                </div>\n                <div className=\"flex items-center gap-1\">\n                  <TooltipProvider>\n                    <Tooltip>\n                      <TooltipTrigger asChild>\n                        <Button variant=\"ghost\" size=\"icon\" onClick={showAgentMonitor} className=\"h-8 w-8\">\n                          <Eye className=\"h-4 w-4\" />\n                        </Button>\n                      </TooltipTrigger>\n                      <TooltipContent side=\"bottom\">\n                        <p>Show Agent Monitor</p>\n                      </TooltipContent>\n                    </Tooltip>\n                  </TooltipProvider>\n                  <TooltipProvider>\n                    <Tooltip>\n                      <TooltipTrigger asChild>\n                        <Button variant=\"ghost\" size=\"icon\" onClick={() => setIsOpen(false)} className=\"h-8 w-8\">\n                          <X className=\"h-4 w-4\" />\n                        </Button>\n                      </TooltipTrigger>\n                      <TooltipContent side=\"bottom\">\n                        <p>Close Workflow</p>\n                      </TooltipContent>\n                    </Tooltip>\n                  </TooltipProvider>\n                </div>\n              </CardHeader>\n              <CardContent style={{ height: 'calc(100% - 60px)', overflow: 'auto' }} className=\"p-0 flex-1\">\n                {renderContent()}\n              </CardContent>\n            </Card>\n\n            {/* Resize Handle */}\n            <div\n              className=\"w-1 cursor-col-resize bg-border hover:bg-primary/60 transition-colors relative group\"\n              onMouseDown={handleResizeStart}\n            />\n          </div>\n\n          {/* Overlay */}\n          {isOpen && (\n            <div\n              style={{ height: '100vh' }}\n              className=\"fixed inset-0 bg-black/20 z-30\"\n              onClick={() => setIsOpen(false)}\n            />\n          )}\n        </>\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}