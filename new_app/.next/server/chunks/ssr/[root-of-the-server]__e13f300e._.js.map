{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["file:///Users/martinprabhu/Downloads/support-operations-centre/new_app/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 112, "column": 0}, "map": {"version":3,"sources":["file:///Users/martinprabhu/Downloads/support-operations-centre/new_app/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,4VACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 172, "column": 0}, "map": {"version":3,"sources":["file:///Users/martinprabhu/Downloads/support-operations-centre/new_app/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,8OAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,kYACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 201, "column": 0}, "map": {"version":3,"sources":["file:///Users/martinprabhu/Downloads/support-operations-centre/new_app/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG,iKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 233, "column": 0}, "map": {"version":3,"sources":["file:///Users/martinprabhu/Downloads/support-operations-centre/new_app/src/components/ui/alert.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n"],"names":[],"mappings":";;;;;;AAAA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,6JACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG3B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAO,EAAE,oBACnC,8OAAC;QACC,KAAK;QACL,MAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG;AAEpB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,gDAAgD;QAC7D,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,iCAAmB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,iBAAiB,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 297, "column": 0}, "map": {"version":3,"sources":["file:///Users/martinprabhu/Downloads/support-operations-centre/new_app/src/components/auth/interactive-login.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState, useEffect } from \"react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Alert, AlertDescription } from \"@/components/ui/alert\";\nimport {\n    Brain, BarChart3, Zap, Globe, TrendingUp, Lock, AlertCircle,\n    User, EyeOff, Eye, ArrowRight, Shield, Sparkles\n} from \"lucide-react\";\nimport { cn } from \"@/lib/utils\";\n\ninterface InteractiveLoginProps {\n    onLogin: (username: string, password: string) => void;\n}\n\nexport default function InteractiveLogin({ onLogin }: InteractiveLoginProps) {\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [showPassword, setShowPassword] = useState(false);\n    const [error, setError] = useState(\"\");\n    const [isLoading, setIsLoading] = useState(false);\n    const [currentFeature, setCurrentFeature] = useState(0);\n    const [isTypingDemo, setIsTypingDemo] = useState(false);\n\n    const features = [\n        {\n            icon: <Brain className=\"h-6 w-6\" />,\n            title: \"AI-Powered Forecasting\",\n            description: \"Advanced machine learning models for accurate business predictions\",\n            color: \"from-blue-500 to-purple-600\"\n        },\n        {\n            icon: <BarChart3 className=\"h-6 w-6\" />,\n            title: \"Real-time Analytics\",\n            description: \"Interactive dashboards with live data visualization\",\n            color: \"from-green-500 to-teal-600\"\n        },\n        {\n            icon: <Zap className=\"h-6 w-6\" />,\n            title: \"Instant Insights\",\n            description: \"Get actionable business insights in seconds\",\n            color: \"from-orange-500 to-red-600\"\n        },\n        {\n            icon: <Globe className=\"h-6 w-6\" />,\n            title: \"Multi-Business Support\",\n            description: \"Manage multiple business units and lines of business\",\n            color: \"from-purple-500 to-pink-600\"\n        }\n    ];\n\n    // Rotate features every 3 seconds\n    useEffect(() => {\n        const interval = setInterval(() => {\n            setCurrentFeature((prev) => (prev + 1) % features.length);\n        }, 3000);\n        return () => clearInterval(interval);\n    }, []);\n\n    const handleSubmit = async (e: React.FormEvent) => {\n        e.preventDefault();\n        setError(\"\");\n        setIsLoading(true);\n\n        // Validation\n        if (!username || !password) {\n            setError(\"Please enter both username and password\");\n            setIsLoading(false);\n            return;\n        }\n\n        // Simulate loading for better UX\n        await new Promise(resolve => setTimeout(resolve, 500));\n\n        // Accept any credentials - they will be validated by the API\n        onLogin(username, password);\n\n        setIsLoading(false);\n    };\n\n    const handleDemoFill = async () => {\n        setIsTypingDemo(true);\n        setUsername(\"\");\n        setPassword(\"\");\n\n        // Enter username - use actual API credentials\n        const demoUsername = \"martin@demo.com\";\n        for (let i = 0; i <= demoUsername.length; i++) {\n            setUsername(demoUsername.slice(0, i));\n            await new Promise(resolve => setTimeout(resolve, 50));\n        }\n\n        // Small pause\n        await new Promise(resolve => setTimeout(resolve, 300));\n\n        // Enter password\n        const demoPassword = \"demo\";\n        for (let i = 0; i <= demoPassword.length; i++) {\n            setPassword(demoPassword.slice(0, i));\n            await new Promise(resolve => setTimeout(resolve, 100));\n        }\n\n        setIsTypingDemo(false);\n    };\n\n    const currentFeatureData = features[currentFeature];\n\n    return (\n        <div className=\"min-h-screen bg-gradient-to-br from-slate-900 via-purple-900 to-slate-900 flex items-center justify-center p-4 relative overflow-hidden\">\n            {/* Animated Background Elements */}\n            <div className=\"absolute inset-0 overflow-hidden\">\n                <div className=\"absolute -top-40 -right-40 w-80 h-80 bg-purple-500 rounded-full mix-blend-multiply filter blur-xl opacity-20 animate-pulse\"></div>\n                <div className=\"absolute -bottom-40 -left-40 w-80 h-80 bg-blue-500 rounded-full mix-blend-multiply filter blur-xl opacity-20 animate-pulse delay-1000\"></div>\n                <div className=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-80 h-80 bg-teal-500 rounded-full mix-blend-multiply filter blur-xl opacity-10 animate-pulse delay-2000\"></div>\n            </div>\n\n            {/* Floating Icons */}\n            <div className=\"absolute inset-0 overflow-hidden pointer-events-none\">\n                {[...Array(6)].map((_, i) => (\n                    <div\n                        key={i}\n                        className={cn(\n                            \"absolute animate-float opacity-10\",\n                            i % 2 === 0 ? \"animate-float-delay-1\" : \"animate-float-delay-2\"\n                        )}\n                        style={{\n                            left: `${Math.random() * 100}%`,\n                            top: `${Math.random() * 100}%`,\n                            animationDelay: `${i * 0.5}s`\n                        }}\n                    >\n                        {i % 3 === 0 && <BarChart3 className=\"h-8 w-8 text-white\" />}\n                        {i % 3 === 1 && <TrendingUp className=\"h-8 w-8 text-white\" />}\n                        {i % 3 === 2 && <Brain className=\"h-8 w-8 text-white\" />}\n                    </div>\n                ))}\n            </div>\n\n            <div className=\"w-full max-w-6xl grid lg:grid-cols-2 gap-8 items-center relative z-10\">\n                {/* Left Side - Branding & Features */}\n                <div className=\"text-white space-y-8\">\n                    {/* Logo & Title */}\n                    <div className=\"space-y-4\">\n                        <div className=\"flex items-center gap-3\">\n                            <div className=\"p-3 bg-gradient-to-r from-blue-500 to-purple-600 rounded-xl shadow-lg\">\n                                <TrendingUp className=\"h-8 w-8 text-white\" />\n                            </div>\n                            <div>\n                                <h1 className=\"text-4xl font-bold bg-gradient-to-r from-white to-gray-300 bg-clip-text text-transparent\">\n                                    AI Assistant\n                                </h1>\n                                <p className=\"text-gray-300 text-lg\">\n                                    Intelligent Business Analytics Platform\n                                </p>\n                            </div>\n                        </div>\n                    </div>\n\n                    {/* Animated Feature Showcase */}\n                    <div className=\"relative\">\n                        <div className=\"bg-white/10 backdrop-blur-sm rounded-2xl p-6 border border-white/20 shadow-xl\">\n                            <div className=\"flex items-start gap-4\">\n                                <div className={cn(\n                                    \"p-3 rounded-xl bg-gradient-to-r text-white shadow-lg transition-all duration-500\",\n                                    currentFeatureData.color\n                                )}>\n                                    {currentFeatureData.icon}\n                                </div>\n                                <div className=\"flex-1\">\n                                    <h3 className=\"text-xl font-semibold mb-2 text-white\">\n                                        {currentFeatureData.title}\n                                    </h3>\n                                    <p className=\"text-gray-300\">\n                                        {currentFeatureData.description}\n                                    </p>\n                                </div>\n                            </div>\n\n                            {/* Feature Indicators */}\n                            <div className=\"flex gap-2 mt-4\">\n                                {features.map((_, index) => (\n                                    <div\n                                        key={index}\n                                        className={cn(\n                                            \"h-2 rounded-full transition-all duration-300\",\n                                            index === currentFeature\n                                                ? \"w-8 bg-white\"\n                                                : \"w-2 bg-white/30\"\n                                        )}\n                                    />\n                                ))}\n                            </div>\n                        </div>\n                    </div>\n\n                    {/* Stats */}\n                    <div className=\"grid grid-cols-3 gap-4\">\n                        <div className=\"text-center\">\n                            <div className=\"text-2xl font-bold text-white\">99.9%</div>\n                            <div className=\"text-sm text-gray-300\">Uptime</div>\n                        </div>\n                        <div className=\"text-center\">\n                            <div className=\"text-2xl font-bold text-white\">10K+</div>\n                            <div className=\"text-sm text-gray-300\">Forecasts</div>\n                        </div>\n                        <div className=\"text-center\">\n                            <div className=\"text-2xl font-bold text-white\">24/7</div>\n                            <div className=\"text-sm text-gray-300\">Support</div>\n                        </div>\n                    </div>\n                </div>\n\n                {/* Right Side - Login Form */}\n                <div className=\"flex justify-center\">\n                    <Card className=\"w-full max-w-md shadow-2xl border-0 bg-white/95 backdrop-blur-sm\">\n                        <CardHeader className=\"space-y-1 text-center pb-6\">\n                            <div className=\"flex justify-center mb-4\">\n                                <div className=\"p-3 bg-gradient-to-r from-blue-500 to-purple-600 rounded-full\">\n                                    <Lock className=\"h-6 w-6 text-white\" />\n                                </div>\n                            </div>\n                            <CardTitle className=\"text-2xl font-bold\">Welcome Back</CardTitle>\n                            <p className=\"text-muted-foreground\">\n                                Sign in to access your analytics dashboard\n                            </p>\n                        </CardHeader>\n\n                        <CardContent className=\"space-y-6\">\n                            <form onSubmit={handleSubmit} className=\"space-y-4\">\n                                {error && (\n                                    <Alert variant=\"destructive\" className=\"animate-shake\">\n                                        <AlertCircle className=\"h-4 w-4\" />\n                                        <AlertDescription>{error}</AlertDescription>\n                                    </Alert>\n                                )}\n\n                                <div className=\"space-y-2\">\n                                    <Label htmlFor=\"username\" className=\"flex items-center gap-2\">\n                                        <User className=\"h-4 w-4\" />\n                                        Username\n                                    </Label>\n                                    <Input\n                                        id=\"username\"\n                                        type=\"text\"\n                                        placeholder=\"Enter your username\"\n                                        value={username}\n                                        onChange={(e) => setUsername(e.target.value)}\n                                        disabled={isLoading || isTypingDemo}\n                                        className=\"transition-all duration-200 focus:ring-2 focus:ring-blue-500\"\n                                    />\n                                </div>\n\n                                <div className=\"space-y-2\">\n                                    <Label htmlFor=\"password\" className=\"flex items-center gap-2\">\n                                        <Lock className=\"h-4 w-4\" />\n                                        Password\n                                    </Label>\n                                    <div className=\"relative\">\n                                        <Input\n                                            id=\"password\"\n                                            type={showPassword ? \"text\" : \"password\"}\n                                            placeholder=\"Enter your password\"\n                                            value={password}\n                                            onChange={(e) => setPassword(e.target.value)}\n                                            disabled={isLoading || isTypingDemo}\n                                            className=\"pr-10 transition-all duration-200 focus:ring-2 focus:ring-blue-500\"\n                                        />\n                                        <Button\n                                            type=\"button\"\n                                            variant=\"ghost\"\n                                            size=\"sm\"\n                                            className=\"absolute right-0 top-0 h-full px-3 py-2 hover:bg-transparent\"\n                                            onClick={() => setShowPassword(!showPassword)}\n                                            disabled={isLoading || isTypingDemo}\n                                        >\n                                            {showPassword ? (\n                                                <EyeOff className=\"h-4 w-4\" />\n                                            ) : (\n                                                <Eye className=\"h-4 w-4\" />\n                                            )}\n                                        </Button>\n                                    </div>\n                                </div>\n\n                                <Button\n                                    type=\"submit\"\n                                    className=\"w-full bg-gradient-to-r from-blue-500 to-purple-600 hover:from-blue-600 hover:to-purple-700 transition-all duration-200 transform hover:scale-105\"\n                                    disabled={isLoading || isTypingDemo}\n                                >\n                                    {isLoading ? (\n                                        <div className=\"flex items-center gap-2\">\n                                            <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white\"></div>\n                                            Signing in...\n                                        </div>\n                                    ) : (\n                                        <div className=\"flex items-center gap-2\">\n                                            Sign In\n                                            <ArrowRight className=\"h-4 w-4\" />\n                                        </div>\n                                    )}\n                                </Button>\n                            </form>\n\n                            {/* Demo Credentials */}\n                            {/* <div className=\"space-y-3\" role=\"region\" aria-label=\"Demo Access\">\n                                <div className=\"relative\">\n                                    <div className=\"absolute inset-0 flex items-center\" aria-hidden=\"true\">\n                                        <span className=\"w-full border-t\" />\n                                    </div>\n                                    <div className=\"relative flex justify-center text-xs uppercase\">\n                                        <span className=\"bg-background px-2 text-muted-foreground\">Demo Access</span>\n                                    </div>\n                                </div>\n\n                                <div className=\"bg-gradient-to-r from-blue-50 to-purple-50 rounded-lg p-4 border border-blue-200\">\n                                    <div className=\"flex items-center gap-2 mb-2\">\n                                        <Shield className=\"h-4 w-4 text-blue-600\" aria-hidden=\"true\" />\n                                        <h4 className=\"text-sm font-medium text-blue-900\">Demo Credentials</h4>\n                                    </div>\n                                    <div className=\"text-sm text-blue-700 space-y-1\">\n                                        <p><strong>Username:</strong> martin@demo.com</p>\n                                        <p><strong>Password:</strong> demo</p>\n                                    </div>\n                                    <Button\n                                        variant=\"outline\"\n                                        size=\"sm\"\n                                        className=\"w-full mt-3 border-blue-300 text-blue-700 hover:bg-blue-100\"\n                                        onClick={handleDemoFill}\n                                        disabled={isLoading || isTypingDemo}\n                                    >\n                                        {isTypingDemo ? (\n                                            <div className=\"flex items-center gap-2\" aria-live=\"polite\" aria-busy=\"true\">\n                                                <div className=\"animate-spin rounded-full h-3 w-3 border-b-2 border-blue-600\" />\n                                                Auto-filling...\n                                            </div>\n                                        ) : (\n                                            <div className=\"flex items-center gap-2\">\n                                                <Sparkles className=\"h-3 w-3\" aria-hidden=\"true\" />\n                                                Auto-fill Demo Credentials\n                                            </div>\n                                        )}\n                                    </Button>\n                                </div>\n                            </div> */}\n                        </CardContent>\n                    </Card>\n                </div>\n            </div>\n\n            {/* Footer */}\n            <div className=\"absolute bottom-4 left-1/2 transform -translate-x-1/2 text-center text-white/60 text-sm\">\n                {/* <p>© 2025 Forecasting AI. Secure • Reliable • Intelligent</p> */}\n            </div>\n\n            <style jsx>{`\n        @keyframes float {\n          0%, 100% { transform: translateY(0px); }\n          50% { transform: translateY(-20px); }\n        }\n        @keyframes shake {\n          0%, 100% { transform: translateX(0); }\n          10%, 30%, 50%, 70%, 90% { transform: translateX(-2px); }\n          20%, 40%, 60%, 80% { transform: translateX(2px); }\n        }\n        .animate-float {\n          animation: float 6s ease-in-out infinite;\n        }\n        .animate-float-delay-1 {\n          animation: float 6s ease-in-out infinite 2s;\n        }\n        .animate-float-delay-2 {\n          animation: float 6s ease-in-out infinite 4s;\n        }\n        .animate-shake {\n          animation: shake 0.5s ease-in-out;\n        }\n      `}</style>\n        </div>\n    );\n}\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAZA;;;;;;;;;;;AAkBe,SAAS,iBAAiB,EAAE,OAAO,EAAyB;IACvE,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACjD,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACrD,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEjD,MAAM,WAAW;QACb;YACI,oBAAM,8OAAC,oMAAA,CAAA,QAAK;gBAAC,WAAU;;;;;;YACvB,OAAO;YACP,aAAa;YACb,OAAO;QACX;QACA;YACI,oBAAM,8OAAC,kNAAA,CAAA,YAAS;gBAAC,WAAU;;;;;;YAC3B,OAAO;YACP,aAAa;YACb,OAAO;QACX;QACA;YACI,oBAAM,8OAAC,gMAAA,CAAA,MAAG;gBAAC,WAAU;;;;;;YACrB,OAAO;YACP,aAAa;YACb,OAAO;QACX;QACA;YACI,oBAAM,8OAAC,oMAAA,CAAA,QAAK;gBAAC,WAAU;;;;;;YACvB,OAAO;YACP,aAAa;YACb,OAAO;QACX;KACH;IAED,kCAAkC;IAClC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACN,MAAM,WAAW,YAAY;YACzB,kBAAkB,CAAC,OAAS,CAAC,OAAO,CAAC,IAAI,SAAS,MAAM;QAC5D,GAAG;QACH,OAAO,IAAM,cAAc;IAC/B,GAAG,EAAE;IAEL,MAAM,eAAe,OAAO;QACxB,EAAE,cAAc;QAChB,SAAS;QACT,aAAa;QAEb,aAAa;QACb,IAAI,CAAC,YAAY,CAAC,UAAU;YACxB,SAAS;YACT,aAAa;YACb;QACJ;QAEA,iCAAiC;QACjC,MAAM,IAAI,QAAQ,CAAA,UAAW,WAAW,SAAS;QAEjD,6DAA6D;QAC7D,QAAQ,UAAU;QAElB,aAAa;IACjB;IAEA,MAAM,iBAAiB;QACnB,gBAAgB;QAChB,YAAY;QACZ,YAAY;QAEZ,8CAA8C;QAC9C,MAAM,eAAe;QACrB,IAAK,IAAI,IAAI,GAAG,KAAK,aAAa,MAAM,EAAE,IAAK;YAC3C,YAAY,aAAa,KAAK,CAAC,GAAG;YAClC,MAAM,IAAI,QAAQ,CAAA,UAAW,WAAW,SAAS;QACrD;QAEA,cAAc;QACd,MAAM,IAAI,QAAQ,CAAA,UAAW,WAAW,SAAS;QAEjD,iBAAiB;QACjB,MAAM,eAAe;QACrB,IAAK,IAAI,IAAI,GAAG,KAAK,aAAa,MAAM,EAAE,IAAK;YAC3C,YAAY,aAAa,KAAK,CAAC,GAAG;YAClC,MAAM,IAAI,QAAQ,CAAA,UAAW,WAAW,SAAS;QACrD;QAEA,gBAAgB;IACpB;IAEA,MAAM,qBAAqB,QAAQ,CAAC,eAAe;IAEnD,qBACI,8OAAC;kDAAc;;0BAEX,8OAAC;0DAAc;;kCACX,8OAAC;kEAAc;;;;;;kCACf,8OAAC;kEAAc;;;;;;kCACf,8OAAC;kEAAc;;;;;;;;;;;;0BAInB,8OAAC;0DAAc;0BACV;uBAAI,MAAM;iBAAG,CAAC,GAAG,CAAC,CAAC,GAAG,kBACnB,8OAAC;wBAMG,OAAO;4BACH,MAAM,GAAG,KAAK,MAAM,KAAK,IAAI,CAAC,CAAC;4BAC/B,KAAK,GAAG,KAAK,MAAM,KAAK,IAAI,CAAC,CAAC;4BAC9B,gBAAgB,GAAG,IAAI,IAAI,CAAC,CAAC;wBACjC;mEARW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACR,qCACA,IAAI,MAAM,IAAI,0BAA0B;;4BAQ3C,IAAI,MAAM,mBAAK,8OAAC,kNAAA,CAAA,YAAS;gCAAC,WAAU;;;;;;4BACpC,IAAI,MAAM,mBAAK,8OAAC,kNAAA,CAAA,aAAU;gCAAC,WAAU;;;;;;4BACrC,IAAI,MAAM,mBAAK,8OAAC,oMAAA,CAAA,QAAK;gCAAC,WAAU;;;;;;;uBAb5B;;;;;;;;;;0BAkBjB,8OAAC;0DAAc;;kCAEX,8OAAC;kEAAc;;0CAEX,8OAAC;0EAAc;0CACX,cAAA,8OAAC;8EAAc;;sDACX,8OAAC;sFAAc;sDACX,cAAA,8OAAC,kNAAA,CAAA,aAAU;gDAAC,WAAU;;;;;;;;;;;sDAE1B,8OAAC;;;8DACG,8OAAC;8FAAa;8DAA2F;;;;;;8DAGzG,8OAAC;8FAAY;8DAAwB;;;;;;;;;;;;;;;;;;;;;;;0CAQjD,8OAAC;0EAAc;0CACX,cAAA,8OAAC;8EAAc;;sDACX,8OAAC;sFAAc;;8DACX,8OAAC;+FAAe,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACb,oFACA,mBAAmB,KAAK;8DAEvB,mBAAmB,IAAI;;;;;;8DAE5B,8OAAC;8FAAc;;sEACX,8OAAC;sGAAa;sEACT,mBAAmB,KAAK;;;;;;sEAE7B,8OAAC;sGAAY;sEACR,mBAAmB,WAAW;;;;;;;;;;;;;;;;;;sDAM3C,8OAAC;sFAAc;sDACV,SAAS,GAAG,CAAC,CAAC,GAAG,sBACd,8OAAC;+FAEc,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACR,gDACA,UAAU,iBACJ,iBACA;mDALL;;;;;;;;;;;;;;;;;;;;;0CAczB,8OAAC;0EAAc;;kDACX,8OAAC;kFAAc;;0DACX,8OAAC;0FAAc;0DAAgC;;;;;;0DAC/C,8OAAC;0FAAc;0DAAwB;;;;;;;;;;;;kDAE3C,8OAAC;kFAAc;;0DACX,8OAAC;0FAAc;0DAAgC;;;;;;0DAC/C,8OAAC;0FAAc;0DAAwB;;;;;;;;;;;;kDAE3C,8OAAC;kFAAc;;0DACX,8OAAC;0FAAc;0DAAgC;;;;;;0DAC/C,8OAAC;0FAAc;0DAAwB;;;;;;;;;;;;;;;;;;;;;;;;kCAMnD,8OAAC;kEAAc;kCACX,cAAA,8OAAC,gIAAA,CAAA,OAAI;4BAAC,WAAU;;8CACZ,8OAAC,gIAAA,CAAA,aAAU;oCAAC,WAAU;;sDAClB,8OAAC;sFAAc;sDACX,cAAA,8OAAC;0FAAc;0DACX,cAAA,8OAAC,kMAAA,CAAA,OAAI;oDAAC,WAAU;;;;;;;;;;;;;;;;sDAGxB,8OAAC,gIAAA,CAAA,YAAS;4CAAC,WAAU;sDAAqB;;;;;;sDAC1C,8OAAC;sFAAY;sDAAwB;;;;;;;;;;;;8CAKzC,8OAAC,gIAAA,CAAA,cAAW;oCAAC,WAAU;8CACnB,cAAA,8OAAC;wCAAK,UAAU;kFAAwB;;4CACnC,uBACG,8OAAC,iIAAA,CAAA,QAAK;gDAAC,SAAQ;gDAAc,WAAU;;kEACnC,8OAAC,oNAAA,CAAA,cAAW;wDAAC,WAAU;;;;;;kEACvB,8OAAC,iIAAA,CAAA,mBAAgB;kEAAE;;;;;;;;;;;;0DAI3B,8OAAC;0FAAc;;kEACX,8OAAC,iIAAA,CAAA,QAAK;wDAAC,SAAQ;wDAAW,WAAU;;0EAChC,8OAAC,kMAAA,CAAA,OAAI;gEAAC,WAAU;;;;;;4DAAY;;;;;;;kEAGhC,8OAAC,iIAAA,CAAA,QAAK;wDACF,IAAG;wDACH,MAAK;wDACL,aAAY;wDACZ,OAAO;wDACP,UAAU,CAAC,IAAM,YAAY,EAAE,MAAM,CAAC,KAAK;wDAC3C,UAAU,aAAa;wDACvB,WAAU;;;;;;;;;;;;0DAIlB,8OAAC;0FAAc;;kEACX,8OAAC,iIAAA,CAAA,QAAK;wDAAC,SAAQ;wDAAW,WAAU;;0EAChC,8OAAC,kMAAA,CAAA,OAAI;gEAAC,WAAU;;;;;;4DAAY;;;;;;;kEAGhC,8OAAC;kGAAc;;0EACX,8OAAC,iIAAA,CAAA,QAAK;gEACF,IAAG;gEACH,MAAM,eAAe,SAAS;gEAC9B,aAAY;gEACZ,OAAO;gEACP,UAAU,CAAC,IAAM,YAAY,EAAE,MAAM,CAAC,KAAK;gEAC3C,UAAU,aAAa;gEACvB,WAAU;;;;;;0EAEd,8OAAC,kIAAA,CAAA,SAAM;gEACH,MAAK;gEACL,SAAQ;gEACR,MAAK;gEACL,WAAU;gEACV,SAAS,IAAM,gBAAgB,CAAC;gEAChC,UAAU,aAAa;0EAEtB,6BACG,8OAAC,0MAAA,CAAA,SAAM;oEAAC,WAAU;;;;;yFAElB,8OAAC,gMAAA,CAAA,MAAG;oEAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;;0DAM/B,8OAAC,kIAAA,CAAA,SAAM;gDACH,MAAK;gDACL,WAAU;gDACV,UAAU,aAAa;0DAEtB,0BACG,8OAAC;8FAAc;;sEACX,8OAAC;sGAAc;;;;;;wDAAkE;;;;;;yEAIrF,8OAAC;8FAAc;;wDAA0B;sEAErC,8OAAC,kNAAA,CAAA,aAAU;4DAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAqDtD,8OAAC;0DAAc;;;;;;;;;;;;;;;;AA6B3B","debugId":null}},
    {"offset": {"line": 1022, "column": 0}, "map": {"version":3,"sources":["file:///Users/martinprabhu/Downloads/support-operations-centre/new_app/app/login/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useEffect } from \"react\";\nimport { useRouter } from \"next/navigation\";\nimport InteractiveLogin from \"@/components/auth/interactive-login\";\n\nexport default function LoginPage() {\n  const router = useRouter();\n\n  useEffect(() => {\n    // If already authenticated, redirect to main page\n    if (typeof window !== \"undefined\" && localStorage.getItem(\"isAuthenticated\") === \"true\") {\n      router.push(\"/main\");\n    }\n  }, [router]);\n\n  // Auth handler for InteractiveLogin\n  const handleLogin = (username: string, password: string) => {\n    // Store credentials for API authentication\n    localStorage.setItem(\"isAuthenticated\", \"true\");\n    localStorage.setItem(\"zentere_username\", username);\n    localStorage.setItem(\"zentere_password\", password);\n    router.push(\"/main\");\n  };\n\n  // Skip rendering if already authenticated\n  if (typeof window !== \"undefined\" && localStorage.getItem(\"isAuthenticated\") === \"true\") {\n    return null;\n  }\n\n  return (\n    <InteractiveLogin onLogin={handleLogin} />\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAJA;;;;;AAMe,SAAS;IACtB,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IAEvB,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,kDAAkD;QAClD,IAAI,gBAAkB,eAAe,aAAa,OAAO,CAAC,uBAAuB,QAAQ;;QAEzF;IACF,GAAG;QAAC;KAAO;IAEX,oCAAoC;IACpC,MAAM,cAAc,CAAC,UAAkB;QACrC,2CAA2C;QAC3C,aAAa,OAAO,CAAC,mBAAmB;QACxC,aAAa,OAAO,CAAC,oBAAoB;QACzC,aAAa,OAAO,CAAC,oBAAoB;QACzC,OAAO,IAAI,CAAC;IACd;IAEA,0CAA0C;IAC1C,IAAI,gBAAkB,eAAe,aAAa,OAAO,CAAC,uBAAuB,QAAQ;;IAEzF;IAEA,qBACE,8OAAC,kJAAA,CAAA,UAAgB;QAAC,SAAS;;;;;;AAE/B","debugId":null}}]
}